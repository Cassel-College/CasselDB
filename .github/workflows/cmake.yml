name: Make CasselDB

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Build
      # Build your program with the given configuration
      run: cd ${{github.workspace}}/build;sh build.sh

    - name: Create Configuration
      # Build your program with the given configuration
      run: cd ${{github.workspace}}/build/create_product_setting/;sh create_configuration.sh

    - name: Create start
      # Build your program with the given configuration
      run: cd ${{github.workspace}}/build/create_product_setting/;sh create_start.sh

    - name: Create Install
      # Build your program with the given configuration
      run: cd ${{github.workspace}}/build/create_product_setting/;sh install.sh

    - name: Running
      run: ${{github.workspace}}/cassel/start.sh
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      
